package com.zoritism.heavybullet.backpack

import net.minecraft.core.BlockPos
import net.minecraft.nbt.CompoundTag
import net.minecraft.server.level.ServerLevel
import net.minecraft.server.level.ServerPlayer
import net.minecraft.world.phys.Vec3
import net.spaceeye.vmod.api.VSCoreAPI
import org.valkyrienskies.core.api.ships.ServerShip
import java.util.UUID

object VModSchematicJavaHelper {

    /**
     * Поиск корабля по позиции блока — по аналогии с реализацией из VMod/ShipUtils.
     * Используется VSCoreAPI из VMod.
     */
    @JvmStatic
    fun findServerShip(level: ServerLevel, pos: BlockPos): DockyardUpgradeLogic.ServerShipHandle? {
        val shipWorld = VSCoreAPI.serverShipWorld(level)
        val x = pos.x + 0.5
        val y = pos.y + 0.5
        val z = pos.z + 0.5
        for (ship in shipWorld.ships) {
            val aabb = ship.worldAABB ?: continue
            if (x >= aabb.minX() && x <= aabb.maxX() &&
                    y >= aabb.minY() && y <= aabb.maxY() &&
                    z >= aabb.minZ() && z <= aabb.maxZ()) {
                return object : DockyardUpgradeLogic.ServerShipHandle {
                    override fun getServerShip(): Any = ship
                    override fun getId(): Long = ship.id
                }
            }
        }
        return null
    }

    @JvmStatic
    fun saveShipToNBT(
            level: ServerLevel,
            player: ServerPlayer,
            uuid: UUID,
            ship: DockyardUpgradeLogic.ServerShipHandle,
            nbt: CompoundTag
    ): Boolean {
        val serverShip = ship.getServerShip() as? ServerShip ?: return false
        // По аналогии с BottleShip — просто сохранить id корабля
        nbt.putLong("vs_ship_id", serverShip.id)
        return true
    }

    @JvmStatic
    fun spawnShipFromNBT(
            level: ServerLevel,
            player: ServerPlayer,
            uuid: UUID,
            pos: Vec3,
            nbt: CompoundTag
    ) {
        // Воссоздание корабля из NBT не реализовано в открытом API VS2/VMod, оставить пустым
    }

    @JvmStatic
    fun removeShip(level: ServerLevel, ship: DockyardUpgradeLogic.ServerShipHandle) {
        // Удаление корабля из мира не реализовано в открытом API VS2/VMod, оставить пустым
    }
}